/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 	*/
/* ---------------------------------------------------- */

/* Drop Triggers, Sequences for Autonumber Columns */

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_authors_a_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_authors_a_id"'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_authors_a_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_authors_a_id"'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_books_b_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_books_b_id"'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_books_b_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_books_b_id"'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_genres_g_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_genres_g_id"'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_genres_g_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_genres_g_id"'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_subscribers_s_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_subscribers_s_id"'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_subscribers_s_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_subscribers_s_id"'; 
END IF; 
END;
/


DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_subscriptions_sb_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER "TRG_subscriptions_sb_id"'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_subscriptions_sb_id'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SEQ_subscriptions_sb_id"'; 
END IF; 
END;
/


/* Drop Tables */

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "authors" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "books" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "genres" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "m2m_books_authors" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "m2m_books_genres" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "subscribers" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   "subscriptions" CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

/* Create Tables */

CREATE TABLE  "authors"
(
	"a_id" NUMBER(10) NOT NULL,
	"a_name" NVARCHAR2(150) NOT NULL
)
;

CREATE TABLE  "books"
(
	"b_id" NUMBER(10) NOT NULL,
	"b_name" NVARCHAR2(150) NOT NULL,
	"b_year" NUMBER(5) NOT NULL,
	"b_quantity" NUMBER(5) NOT NULL
)
;

CREATE TABLE  "genres"
(
	"g_id" NUMBER(10) NOT NULL,
	"g_name" NVARCHAR2(150) NOT NULL
)
;

CREATE TABLE  "m2m_books_authors"
(
	"b_id" NUMBER(10) NOT NULL,
	"a_id" NUMBER(10) NOT NULL
)
;

CREATE TABLE  "m2m_books_genres"
(
	"b_id" NUMBER(10) NOT NULL,
	"g_id" NUMBER(10) NOT NULL
)
;

CREATE TABLE  "subscribers"
(
	"s_id" NUMBER(10) NOT NULL,
	"s_name" NVARCHAR2(150) NOT NULL
)
;

CREATE TABLE  "subscriptions"
(
	"sb_id" NUMBER(10) NOT NULL,
	"sb_subscriber" NUMBER(10) NOT NULL,
	"sb_book" NUMBER(10) NOT NULL,
	"sb_start" DATE NOT NULL,
	"sb_finish" DATE NOT NULL,
	"sb_is_active" CHAR(1) NOT NULL
)
;

/* Create Comments, Sequences and Triggers for Autonumber Columns */

CREATE SEQUENCE "SEQ_authors_a_id" 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER "TRG_authors_a_id" 
	BEFORE INSERT 
	ON "authors" 
	FOR EACH ROW 
	BEGIN 
		SELECT "SEQ_authors_a_id".NEXTVAL 
		INTO :NEW."a_id" 
		FROM DUAL; 
	END;

/


CREATE SEQUENCE "SEQ_books_b_id" 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER "TRG_books_b_id" 
	BEFORE INSERT 
	ON "books" 
	FOR EACH ROW 
	BEGIN 
		SELECT "SEQ_books_b_id".NEXTVAL 
		INTO :NEW."b_id" 
		FROM DUAL; 
	END;

/


CREATE SEQUENCE "SEQ_genres_g_id" 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER "TRG_genres_g_id" 
	BEFORE INSERT 
	ON "genres" 
	FOR EACH ROW 
	BEGIN 
		SELECT "SEQ_genres_g_id".NEXTVAL 
		INTO :NEW."g_id" 
		FROM DUAL; 
	END;

/


CREATE SEQUENCE "SEQ_subscribers_s_id" 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER "TRG_subscribers_s_id" 
	BEFORE INSERT 
	ON "subscribers" 
	FOR EACH ROW 
	BEGIN 
		SELECT "SEQ_subscribers_s_id".NEXTVAL 
		INTO :NEW."s_id" 
		FROM DUAL; 
	END;

/


CREATE SEQUENCE "SEQ_subscriptions_sb_id" 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER "TRG_subscriptions_sb_id" 
	BEFORE INSERT 
	ON "subscriptions" 
	FOR EACH ROW 
	BEGIN 
		SELECT "SEQ_subscriptions_sb_id".NEXTVAL 
		INTO :NEW."sb_id" 
		FROM DUAL; 
	END;

/


/* Create Primary Keys, Indexes, Uniques, Checks, Triggers */

ALTER TABLE  "authors" 
 ADD CONSTRAINT "PK_authors"
	PRIMARY KEY ("a_id") 
 USING INDEX
;

ALTER TABLE  "books" 
 ADD CONSTRAINT "PK_books"
	PRIMARY KEY ("b_id") 
 USING INDEX
;

ALTER TABLE  "genres" 
 ADD CONSTRAINT "PK_genres"
	PRIMARY KEY ("g_id") 
 USING INDEX
;

ALTER TABLE  "genres" 
 ADD CONSTRAINT "UQ_genres_g_name" UNIQUE ("g_name") 
 USING INDEX
;

ALTER TABLE  "m2m_books_authors" 
 ADD CONSTRAINT "PK_m2m_books_authors"
	PRIMARY KEY ("b_id","a_id") 
 USING INDEX
;

ALTER TABLE  "m2m_books_genres" 
 ADD CONSTRAINT "PK_m2m_books_genres"
	PRIMARY KEY ("b_id","g_id") 
 USING INDEX
;

ALTER TABLE  "subscribers" 
 ADD CONSTRAINT "PK_subscribers"
	PRIMARY KEY ("s_id") 
 USING INDEX
;

ALTER TABLE  "subscriptions" 
 ADD CONSTRAINT "PK_subscriptions"
	PRIMARY KEY ("sb_id") 
 USING INDEX
;

ALTER TABLE  "subscriptions" 
 ADD CONSTRAINT "check_enum" CHECK ("sb_is_active" IN ('Y', 'N'))
;

/* Create Foreign Key Constraints */

ALTER TABLE  "m2m_books_authors" 
 ADD CONSTRAINT "FK_m2m_books_authors_authors"
	FOREIGN KEY ("a_id") REFERENCES  "authors" ("a_id") ON DELETE Cascade
;

ALTER TABLE  "m2m_books_authors" 
 ADD CONSTRAINT "FK_m2m_books_authors_books"
	FOREIGN KEY ("b_id") REFERENCES  "books" ("b_id") ON DELETE Cascade
;

ALTER TABLE  "m2m_books_genres" 
 ADD CONSTRAINT "FK_m2m_books_genres_books"
	FOREIGN KEY ("b_id") REFERENCES  "books" ("b_id")
;

ALTER TABLE  "m2m_books_genres" 
 ADD CONSTRAINT "FK_m2m_books_genres_genres"
	FOREIGN KEY ("g_id") REFERENCES  "genres" ("g_id")
;

ALTER TABLE  "subscriptions" 
 ADD CONSTRAINT "FK_subscriptions_books"
	FOREIGN KEY ("sb_book") REFERENCES  "books" ("b_id") ON DELETE Cascade
;

ALTER TABLE  "subscriptions" 
 ADD CONSTRAINT "FK_subscriptions_subscribers"
	FOREIGN KEY ("sb_subscriber") REFERENCES  "subscribers" ("s_id") ON DELETE Cascade
;
